name: CI-Linux

on:
  push:
    branches: [ master ]
    paths-ignore:
    - '.github/workflows/ci-macos.yml'
    - '.github/workflows/ci-windows.yml'
    - '.github/workflows/cibuildwheel.yml'
  pull_request:
    branches: [ master ]
    paths-ignore:
    - '.github/workflows/ci-macos.yml'
    - '.github/workflows/ci-windows.yml'
    - '.github/workflows/cibuildwheel.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: ubuntu-22.04
    env:
      VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
    strategy:
      fail-fast: false
      matrix:
        curl-version: ["ubuntu"]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        include:
          - curl-version: "vcpkg"
            python-version: "3.12"
    permissions:
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install libcurl4-gnutls-dev libgnutls28-dev
      if: matrix.curl-version == 'ubuntu'
    - name: 'Setup NuGet credentials'
      shell: 'bash'
      run: |
        nuget="$(vcpkg fetch nuget | tail -n 1)"
        mono "${nuget}" \
          sources add \
          -source "https://nuget.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/index.json" \
          -storepasswordincleartext \
          -name "GitHub" \
          -username "${GITHUB_REPOSITORY_OWNER}" \
          -password "${{ secrets.GITHUB_TOKEN }}"
        mono "${nuget}" \
          setapikey "${{ secrets.GITHUB_TOKEN }}" \
          -source "https://nuget.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/index.json"
      if: matrix.curl-version == 'vcpkg'
    - name: Install packages
      run: |
        vcpkg install curl[core,non-http,openssl]
        echo "PATH=/usr/local/share/vcpkg/packages/curl_x64-linux/tools/curl/bin:$PATH" >> "$GITHUB_ENV"
        DIR=/usr/local/share/vcpkg/installed/x64-linux/lib
        echo "PYCURL_EXTRA_OBJECTS=$DIR/libcurl.a:$DIR/libssl.a:$DIR/libcrypto.a:$DIR/libz.a" >> "$GITHUB_ENV"
      if: matrix.curl-version == 'vcpkg'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    - name: Build
      run: make
    - name: Test with pytest
      run: make do-test
